"""
Django settings for glucoinsights project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

from django.utils.log import DEFAULT_LOGGING

load_dotenv()

import pymysql

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", "")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "True") == "True"

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "").split(",")
SECURE_SSL_REDIRECT = os.environ.get("SECURE_SSL_REDIRECT", "False") == "True"
PREPEND_WWW = os.environ.get("PREPEND_WWW", "False") == "True"
BASE_URL = os.environ.get("BASE_URL", "")
# CSRF_TRUSTED_ORIGINS = os.environ.get("CSRF_TRUSTED_ORIGINS", "").split(",")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "gi_cargas.apps.GiCargasConfig",
    "gi.apps.GiAppConfig",
    "svelte.apps.SvelteConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "glucoinsights.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.jinja2.Jinja2",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "environment": "gi.jinja2.environment",
        },
    },
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "glucoinsights.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

if os.environ.get("DATABASE_HOST", ""):
    DATABASES = {
        "default": {
            "ENGINE": os.environ.get("ENGINE", ""),
            "NAME": os.environ.get("DATABASE_NAME", ""),
            "USER": os.environ.get("DATABASE_USER", ""),
            "PASSWORD": os.environ.get("DATABASE_PASSWORD", ""),
            "HOST": os.environ.get("DATABASE_HOST", ""),
            "PORT": os.environ.get("DATABASE_PORT", ""),
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "es-co"

TIME_ZONE = "America/Bogota"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = "/media/"
MEDIA_ROOT = os.environ.get("MEDIA_ROOT", os.path.join(BASE_DIR, "media"))

SLACK_WEBHOOK_URL = os.environ.get("SLACK_WEBHOOK_URL", "")
LOGGING = DEFAULT_LOGGING
if not DEBUG and SLACK_WEBHOOK_URL:
    LOGGING["handlers"]["slack_admins"] = {
        "level": "ERROR",
        "filters": ["require_debug_false"],
        "class": "glucoinsights.slack_logger.SlackExceptionHandler",
    }
    LOGGING["loggers"]["django.security.DisallowedHost"] = {
        "handlers": [],
        "propagate": False,
    }
    LOGGING["loggers"]["django"] = {
        "handlers": ["console", "mail_admins", "slack_admins"],
        "level": "INFO",
    }

DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL", "")
EMAIL_HOST = os.environ.get("EMAIL_HOST", "")
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER", "")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD", "")
EMAIL_PORT = int(os.environ.get("EMAIL_PORT", "0"))
EMAIL_USE_TLS = os.environ.get("EMAIL_USE_TLS", "False") == "True"

DATA_UPLOAD_MAX_NUMBER_FIELDS = 1000000

INDICADORES_MODULE = "gi_indicadores"

INDICADORES_TITLE = "Indicadores"

INDICADORES = [
    "ControlPresionArterialHTA",
    "TomaCreatininaHTA",
    "ControlLdlHTA",
    "CoberturaProgramaHTA",
    "IncidenciaHTA",
    "PrevalenciaHTA",
    "ControlPresionArterial",
    "ControlHemoglobina",
    "MetaHemoglobina",
    "ControlLdl",
    "MetaLdl",
    "TomaCreatinina",
    "TomaAlbuminuria",
    "ControlIMC",
    "CoberturaPrograma",
    "PerdidaTFG",
    "ControlDMDiagnosticados",
    "ControlObesidad",
    "PrevalenciaERC",
]

INDICADORES_CUSTOM_TITLE = "Personalizados"

INDICADORES_CUSTOM = ["ControlHipoglicemia"]

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

SEGMENTOS_MODULE = "gi_dashboards"
SEGMENTOS = [
    "Demografico",
    "Hemoglobina",
    "Imc",
    "Estadios",
    "Genero",
    "EstadoCivil",
    "Escolaridad",
]


USER_LOGGIN = 4